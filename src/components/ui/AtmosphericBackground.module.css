/* AtmosphericBackground.module.css */

/* Background wrapper */
.backgroundWrapper {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  /* bottom: 0;
  min-height: 100%; */
  height: 100%;
  overflow: hidden;
  z-index: -1;
  
  /* Default atmospheric background gradients using CSS variables */
  background: 
    linear-gradient(135deg, 
      var(--atmospheric-blue-primary, rgba(59, 130, 246, 0.15)) 0%, 
      var(--atmospheric-green-primary, rgba(34, 197, 94, 0.12)) 25%,
      var(--atmospheric-purple-primary, rgba(168, 85, 247, 0.18)) 50%,
      var(--atmospheric-blue-secondary, rgba(59, 130, 246, 0.14)) 75%,
      var(--atmospheric-green-secondary, rgba(34, 197, 94, 0.16)) 100%
    ),
    radial-gradient(ellipse at top left, 
      var(--atmospheric-blue-radial, rgba(59, 130, 246, 0.22)) 0%, 
      transparent 45%
    ),
    radial-gradient(ellipse at bottom right, 
      var(--atmospheric-green-radial, rgba(34, 197, 94, 0.20)) 0%, 
      transparent 45%
    ),
    radial-gradient(ellipse at top right, 
      var(--atmospheric-purple-radial, rgba(168, 85, 247, 0.18)) 0%, 
      transparent 40%
    ),
    radial-gradient(ellipse at bottom left, 
      var(--atmospheric-yellow-radial, rgba(251, 191, 36, 0.14)) 0%, 
      transparent 40%
    ),
    radial-gradient(ellipse at center, 
      var(--atmospheric-orange-radial, rgba(251, 146, 60, 0.10)) 0%, 
      transparent 60%
    ),
    var(--bg-gradient-primary, transparent),
    var(--glass-gradient-mesh, transparent) !important;
}

/* Light mode background override */
@media (prefers-color-scheme: light) {
  .backgroundWrapper {
    background: 
      linear-gradient(135deg, 
        rgba(248, 248, 246, calc(0.4 * var(--atmospheric-opacity, 1))) 0%, 
        rgba(252, 251, 249, calc(0.3 * var(--atmospheric-opacity, 1))) 25%,
        rgba(250, 249, 246, calc(0.35 * var(--atmospheric-opacity, 1))) 50%,
        rgba(249, 248, 245, calc(0.25 * var(--atmospheric-opacity, 1))) 75%,
        rgba(251, 250, 248, calc(0.3 * var(--atmospheric-opacity, 1))) 100%
      ),
      radial-gradient(ellipse at top left, 
        rgba(245, 244, 242, calc(0.2 * var(--atmospheric-opacity, 1))) 0%, 
        transparent 60%
      ),
      radial-gradient(ellipse at bottom right, 
        rgba(247, 246, 244, calc(0.18 * var(--atmospheric-opacity, 1))) 0%, 
        transparent 60%
      ),
      radial-gradient(ellipse at center, 
        rgba(249, 248, 246, calc(0.15 * var(--atmospheric-opacity, 1))) 0%, 
        transparent 80%
      ) !important;
  }
}

/* Variant styles */
.variantSubtle {
  --atmospheric-opacity: 0.72; /* 0.4 / 0.55 */
}

.variantMedium {
  --atmospheric-opacity: 1.0; /* 0.55 / 0.55 */
}

.variantRich {
  --atmospheric-opacity: 1.82; /* 1.0 / 0.55 */
}

/* Base atmospheric orb styles */
.atmosphericOrb {
  position: absolute;
  border-radius: 50%;
  z-index: -1;
}

/* Primary orb - Large Purple - Top Left (ID: 1) */
.orbPrimary {
  top: 5%;
  left: 5%;
  animation: floatGentle 24s ease-in-out infinite;
}

/* Secondary orb - Large Green - Top Right (ID: 2) */
.orbSecondary {
  top: 15%;
  right: 10%;
  z-index: 0;
}

/* Accent orb - Small Orange - Middle Left (ID: 3) */
.orbAccent {
  top: 50%;
  left: 5%;
  z-index: 0;
}

/* Ambient orb - Bottom Right Blue (ID: 4) */
.orbAmbient {
  bottom: 10%;
  right: 15%;
  z-index: 0;
}

/* Subtle panel float animation class */
.subtlePanelFloat {
  animation: subtlePanelFloat 8s ease-in-out infinite;
}

/* Animation keyframes */
@keyframes floatGentle {
  0% {
    transform: translateX(0px) translateY(0px) rotate(0deg) scale(1);
  }
  12.5% {
    transform: translateX(-60px) translateY(-45px) rotate(1deg) scale(1.02);
  }
  25% {
    transform: translateX(-85px) translateY(-75px) rotate(3deg) scale(0.98);
  }
  37.5% {
    transform: translateX(-45px) translateY(-100px) rotate(2deg) scale(1.01);
  }
  50% {
    transform: translateX(50px) translateY(-70px) rotate(-2deg) scale(1.03);
  }
  62.5% {
    transform: translateX(80px) translateY(-25px) rotate(-1deg) scale(0.99);
  }
  75% {
    transform: translateX(35px) translateY(70px) rotate(2deg) scale(1.02);
  }
  87.5% {
    transform: translateX(-25px) translateY(85px) rotate(1deg) scale(0.98);
  }
  100% {
    transform: translateX(0px) translateY(0px) rotate(0deg) scale(1);
  }
}

@keyframes floatGentleReverse {
  0% {
    transform: translateX(0px) translateY(0px) rotate(0deg) scale(1);
  }
  12.5% {
    transform: translateX(70px) translateY(50px) rotate(-1deg) scale(0.98);
  }
  25% {
    transform: translateX(95px) translateY(85px) rotate(-3deg) scale(1.02);
  }
  37.5% {
    transform: translateX(50px) translateY(110px) rotate(-2deg) scale(0.99);
  }
  50% {
    transform: translateX(-45px) translateY(75px) rotate(2deg) scale(1.01);
  }
  62.5% {
    transform: translateX(-70px) translateY(35px) rotate(1deg) scale(1.03);
  }
  75% {
    transform: translateX(-35px) translateY(-60px) rotate(-2deg) scale(0.98);
  }
  87.5% {
    transform: translateX(25px) translateY(-80px) rotate(-1deg) scale(1.02);
  }
  100% {
    transform: translateX(0px) translateY(0px) rotate(0deg) scale(1);
  }
}

@keyframes floatGentleAlt {
  0% {
    transform: translateX(0px) translateY(0px) rotate(0deg) scale(1);
  }
  16.6% {
    transform: translateX(-35px) translateY(60px) rotate(2deg) scale(1.01);
  }
  33.3% {
    transform: translateX(-80px) translateY(45px) rotate(1deg) scale(0.99);
  }
  50% {
    transform: translateX(-55px) translateY(-50px) rotate(-1deg) scale(1.02);
  }
  66.6% {
    transform: translateX(45px) translateY(-80px) rotate(-2deg) scale(0.98);
  }
  83.3% {
    transform: translateX(70px) translateY(-20px) rotate(1deg) scale(1.01);
  }
  100% {
    transform: translateX(0px) translateY(0px) rotate(0deg) scale(1);
  }
}

@keyframes subtlePanelFloat {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-12px);
  }
  100% {
    transform: translateY(0px);
  }
}

/* Reduced motion support - Only affects the animated purple orb (ID: 1) */
@media (prefers-reduced-motion: reduce) {
  .orbPrimary {
    animation: none !important;
  }
}
