/* ===================================
   ABOUT PAGE STYLES
   =================================== */

/* ===================================
    KEYFRAME ANIMATIONS & BASE LAYOUT
   =================================== */

@keyframes floatGentle {
  0%, 100% { 
    transform: translateY(0px) translateX(0px) scale(1); 
  }
  25% { 
    transform: translateY(-30px) translateX(20px) scale(1.08); 
  }
  50% { 
    transform: translateY(-15px) translateX(-25px) scale(0.92); 
  }
  75% { 
    transform: translateY(-40px) translateX(10px) scale(1.05); 
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Page Loading Overlay */
.loadingOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--bg-gradient-primary);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}

/* Page Container Base Class */
.pageContainer {
  min-height: 100vh;
  position: relative;
  color: var(--text-primary);
  transition: opacity 0.5s ease-in-out;
}

.pageContainerLoading {
  opacity: 0;
}

.pageContainerVisible {
  opacity: 1;
}

/* Main Container */
.mainContainer {
  min-height: 100vh;
  position: relative;
  color: var(--text-primary);
  transition: opacity 0.5s ease-in-out;
}

.mainContainer--ready {
  opacity: 1;
}

.mainContainer--loading {
  opacity: 0;
}

/* Background Panel */
.backgroundGlassPanel {
  position: absolute;
  top: 10%;
  left: 5%;
  right: 5%;
  bottom: 10%;
  background: rgba(var(--glass-border-rgb), 0.2);
  backdrop-filter: var(--glass-backdrop-heavy);
  border-radius: 8px;
  border: 1px solid var(--glass-border-subtle);
  opacity: 0.2;
  z-index: 0;
  animation: floatPanelVertical 45s ease-in-out infinite;
}

@keyframes floatPanelVertical {
  0%, 100% {
    transform: translateY(40px);
  }
  50% {
    transform: translateY(-80px);
  }
}

/* Glass Highlight Effect */
.glassHighlight {
  position: relative;
  overflow: hidden;
}

.glassHighlight::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: left 0.7s ease;
  pointer-events: none;
}

.glassHighlight:hover::before {
  left: 100%;
}

/* ===================================
   HERO SECTION & PORTRAIT
   =================================== */

/* Hero Section */
.heroSection {
  padding-top: clamp(8rem, 15vh, 12rem);
  padding-bottom: clamp(4rem, 8vh, 6rem);
  padding-left: clamp(1rem, 4vw, 2rem);
  padding-right: clamp(1rem, 4vw, 2rem);
  position: relative;
  overflow: hidden;
}

.heroContainer {
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
  z-index: 1;
}

.heroContent {
  display: flex;
  flex-direction: row;
  gap: clamp(2rem, 8vw, 4rem);
  align-items: flex-start;
}

/* Portrait Column */
.portraitContainer {
  flex: 0 0 auto;
  width: clamp(300px, 35vw, 450px);
  position: relative;
}

.portraitImageWrapper {
  position: relative;
  width: 100%;
  aspect-ratio: 3/4;
}

.portraitWrapper {
  position: relative;
  width: 100%;
  height: 100%;
  border-radius: 8px;
  overflow: hidden;
  background: linear-gradient(145deg, rgba(255, 255, 255, 0.12) 0%, rgba(255, 255, 255, 0.08) 100%), var(--glass-bg-subtle);
  backdrop-filter: var(--glass-backdrop-medium);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.12),
    0 4px 12px rgba(0, 0, 0, 0.08),
    inset 0 1px 0 rgba(255, 255, 255, 0.3),
    inset 0 -1px 0 rgba(0, 0, 0, 0.05);
  animation: fadeInUp 0.8s ease-out 0.2s both;
  transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.portraitWrapper:hover {
  transform: translateY(-6px) scale(1.02);
}

.portraitHoverOverlay {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border-radius: 8px;
  border: 1px solid rgba(168, 85, 247, 0.6);
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.08),
    0 4px 12px rgba(0, 0, 0, 0.04),
    0 0 15px rgba(168, 85, 247, 0.1);
  opacity: 0;
  transition: opacity 0.6s ease;
  pointer-events: none;
}

.portraitInteractiveLayer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 20;
}

.portraitWrapper {
  position: relative;
  width: 100%;
  height: 100%;
  border-radius: 8px;
  overflow: hidden;
  background: linear-gradient(145deg, rgba(255, 255, 255, 0.12) 0%, rgba(255, 255, 255, 0.08) 100%), var(--glass-bg-subtle);
  backdrop-filter: var(--glass-backdrop-medium);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.12),
    0 4px 12px rgba(0, 0, 0, 0.08),
    inset 0 1px 0 rgba(255, 255, 255, 0.3),
    inset 0 -1px 0 rgba(0, 0, 0, 0.05);
  animation: fadeInUp 0.8s ease-out 0.2s both;
  transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.portraitWrapper:hover {
  transform: translateY(-6px) scale(1.02);
}

.portraitWrapper:hover .portraitHoverOverlay {
  opacity: 1;
}

.portraitInteractiveLayer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 20;
}

.portraitLoadingPlaceholder {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2;
}

.portraitImage {
  object-fit: cover;
  object-position: center top;
  transition: opacity 0.6s ease-in-out;
}

.portraitImageLoaded {
  opacity: 1;
}

.portraitImageLoading {
  opacity: 0;
}

.portraitOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(180deg, transparent 0%, rgba(var(--glass-bg-rgb), 0.1) 100%);
  opacity: 0.6;
}

/* Achievements Grid */
.achievementsGrid {
  margin-top: 2rem;
  display: flex;
  flex-wrap: wrap;
  gap: clamp(0.75rem, 2vw, 1.25rem);
  justify-content: center;
  animation: fadeInUp 0.8s ease-out 0.4s both;
}

.achievementCard {
  flex: 1 1 clamp(140px, 22vw, 180px);
  min-width: clamp(140px, 22vw, 180px);
  max-width: 220px;
  padding: clamp(1rem, 3vw, 1.75rem) clamp(0.75rem, 2vw, 1.25rem);
  background: linear-gradient(145deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.08) 100%), var(--glass-bg-subtle);
  backdrop-filter: var(--glass-backdrop-light);
  border-radius: 8px;
  border: 1px solid rgba(255, 255, 255, 0.15);
  text-align: center;
  box-shadow: 
    0 8px 20px rgba(0, 0, 0, 0.08),
    0 4px 12px rgba(0, 0, 0, 0.04),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  position: relative;
  transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  min-height: clamp(120px, 15vh, 140px);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.achievementCardHover {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border-radius: 8px;
  border: 1px solid rgba(59, 130, 246, 0.6);
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.06),
    0 4px 12px rgba(0, 0, 0, 0.04),
    0 0 15px rgba(59, 130, 246, 0.1);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.achievementInteractiveLayer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 20;
}

.achievementCardIcon {
  color: var(--text-accent);
  margin-bottom: 0.75rem;
  opacity: 0.9;
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
  position: relative;
  z-index: 1;
}

.achievementCardLabel {
  font-size: clamp(0.7rem, 1.8vw, 0.8rem);
  color: var(--text-muted);
  font-weight: 500;
  margin-bottom: 0.5rem;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  opacity: 0.8;
  position: relative;
  z-index: 1;
  line-height: 1.2;
  word-break: break-word;
  hyphens: auto;
}

.achievementCardValue {
  font-size: clamp(0.9rem, 2.5vw, 1.1rem);
  color: var(--text-primary);
  font-weight: 650;
  letter-spacing: -0.01em;
  position: relative;
  z-index: 1;
  line-height: 1.1;
}

/* ===================================
   CONTENT COLUMN & SECTIONS
   =================================== */

/* Content Column */
.textContent {
  flex: 1;
  min-width: 0;
}

.textHeader {
  margin-bottom: clamp(1rem, 6vh, 2rem);
}

.textTitle {
  font-size: clamp(3rem, 6vw, 5rem);
  font-weight: 300;
  line-height: 1.1;
  color: var(--text-primary);
  margin-bottom: 1rem;
  letter-spacing: -0.02em;
  animation: fadeInUp 0.8s ease-out 0.1s both;
}

.textIntroduction {
  font-size: clamp(1.1rem, 2.5vw, 1.3rem);
  line-height: 1.6;
  color: var(--text-secondary);
  font-weight: 400;
  opacity: 0.7;
}

/* Personal Story Sections */
.personalStorySections {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-bottom: 2rem;
}

.personalStorySection {
  animation: fadeInUp 0.6s ease-out both;
}

.personalStorySectionTitle {
  font-size: clamp(1.3rem, 3vw, 1.6rem);
  font-weight: 400;
  color: var(--text-primary);
  margin-bottom: 1rem;
  letter-spacing: 0em;
}

.personalStorySectionContent {
  font-size: 1.1rem;
  line-height: 1.7;
  color: var(--text-secondary);
  max-width: 640px;
  opacity: 0.7;
}

/* Action Buttons */
.actionButtons {
  display: flex;
  gap: 1.5rem;
  flex-wrap: wrap;
  animation: fadeInUp 0.8s ease-out 1.1s both;
}

.actionButtonContainer {
  text-decoration: none;
  border: none;
  background: transparent;
  padding: 0;
  cursor: pointer;
}

.actionButtonLink {
  text-decoration: none;
}

/* Skills Section */
.skillsSection {
  padding-top: clamp(1rem, 8vh, 2rem);
  padding-bottom: clamp(1rem, 8vh, 2rem);
  padding-left: clamp(1rem, 4vw, 2rem);
  padding-right: clamp(1rem, 4vw, 2rem);
  position: relative;
}

.skillsContainer {
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
  z-index: 1;
}

.skillsTitle {
  font-size: clamp(2.5rem, 5vw, 3.5rem);
  font-weight: 300;
  text-align: center;
  margin-bottom: clamp(3rem, 6vh, 4rem);
  color: var(--text-primary);
  letter-spacing: 0em;
}

.skillsGrid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.5rem;
}

.skillCard {
  background: linear-gradient(145deg, rgba(255, 255, 255, 0.01) 0%, rgba(255, 255, 255, 0.06) 50%, rgba(255, 255, 255, 0.03) 100%);
  backdrop-filter: var(--glass-backdrop-light);
  padding: 1.75rem 1.5rem;
  border-radius: 8px;
  border: 1px solid rgba(255, 255, 255, 0.18);
  box-shadow: 
    0 6px 18px rgba(0, 0, 0, 0.08),
    0 4px 10px rgba(0, 0, 0, 0.04),
    inset 0 1px 0 rgba(255, 255, 255, 0.25),
    inset 0 -1px 0 rgba(0, 0, 0, 0.05);
  position: relative;
  animation: fadeInUp 0.6s ease-out both;
  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.skillCard:nth-child(1) { animation-delay: 0s; }
.skillCard:nth-child(2) { animation-delay: 0.1s; }
.skillCard:nth-child(3) { animation-delay: 0.2s; }
.skillCard:nth-child(4) { animation-delay: 0.3s; }
.skillCard:nth-child(5) { animation-delay: 0.4s; }
.skillCard:nth-child(6) { animation-delay: 0.5s; }

.skillCard:hover {
  transform: translateY(-6px);
}

.skillHoverOverlay {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border-radius: 8px;
  border: 1px solid rgba(34, 197, 94, 0.6);
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.1),
    0 4px 12px rgba(0, 0, 0, 0.06),
    0 0 15px rgba(34, 197, 94, 0.15);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.skillCard:hover .skillHoverOverlay {
  opacity: 1;
}

/* Skill interactive layer */
.skillInteractiveLayer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10;
}

.skillCardHeader {
  display: flex;
  align-items: center;
  gap: 0.875rem;
  margin-bottom: 1.25rem;
  position: relative;
  z-index: 1;
}

.skillCardIcon {
  color: var(--text-accent);
  opacity: 0.9;
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

.skillCardTitle {
  font-size: 1.2rem;
  font-weight: 300;
  color: var(--text-primary);
  margin-bottom: 0rem;
  letter-spacing: 0em;
}

.skillCardCategory {
  font-size: 0.8rem;
  color: var(--text-muted);
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  opacity: 0.8;
}

.skillProgressBar {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  background: linear-gradient(90deg, var(--color-primary) 0%, var(--color-accent) 100%);
  border-radius: 6px;
  transform: scaleX(0);
  transform-origin: left;
  transition: transform 1.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  box-shadow: 
    0 0 10px rgba(var(--accent-rgb), 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
}

.skillProgressFill {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  background: linear-gradient(90deg, var(--color-primary) 0%, var(--color-accent) 100%), linear-gradient(180deg, rgba(255, 255, 255, 0.2) 0%, rgba(255, 255, 255, 0.1) 100%);
  border-radius: 6px;
  transition: width 1.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  box-shadow: 
    0 0 10px rgba(var(--accent-rgb), 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
}

.skillProgressBarVisible {
  transform: scaleX(1);
  animation: progressGlow 2s ease-in-out;
}

@keyframes progressGlow {
  0% {
    box-shadow: 
      0 0 5px rgba(var(--accent-rgb), 0.2),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }
  50% {
    box-shadow: 
      0 0 20px rgba(var(--accent-rgb), 0.6),
      0 0 30px rgba(var(--primary-rgb), 0.3),
      inset 0 1px 0 rgba(255, 255, 255, 0.4);
  }
  100% {
    box-shadow: 
      0 0 15px rgba(var(--accent-rgb), 0.4),
      0 0 25px rgba(var(--primary-rgb), 0.2),
      inset 0 1px 0 rgba(255, 255, 255, 0.3);
  }
}

.skillPercentage {
  text-align: right;
  margin-top: 0.75rem;
  font-size: 0.9rem;
  color: var(--text-accent);
  font-weight: 650;
  letter-spacing: -0.01em;
  position: relative;
  z-index: 1;
}

/* Values Section */

.valuesSection {
  padding-top: clamp(4rem, 8vh, 6rem);
  padding-bottom: clamp(3rem, 10vh, 4rem);
  padding-left: clamp(0rem, 4vw, 2rem);
  padding-right: clamp(0rem, 4vw, 2rem);
  position: relative;
}

.valuesContainer {
  max-width: 1200px;
  margin: 0 auto;
}

.valuesSectionTitle {
  font-size: clamp(2.5rem, 5vw, 3.5rem);
  font-weight: 300;
  text-align: center;
  margin-bottom: clamp(3rem, 6vh, 4rem);
  color: var(--text-primary);
  letter-spacing: 0em;
}

.valuesGrid {
  display: flex;
  flex-direction: column;
  gap: clamp(3rem, 6vh, 5rem);
}

.valueContainer {
  display: flex;
  align-items: center;
  position: relative;
  min-height: 500px;
  margin-bottom: clamp(2rem, 4vh, 3rem);
}

.valueContainer--even {
  flex-direction: row;
}

.valueContainer--odd {
  flex-direction: row-reverse;
}

/* Value Image Panel */
.valueImagePanel {
  flex: 0 0 clamp(320px, 38%, 450px);
  height: 500px;
  position: relative;
  border-radius: 8px;
  overflow: hidden;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.12) 0%, rgba(255, 255, 255, 0.08) 50%, rgba(255, 255, 255, 0.04) 100%);
  backdrop-filter: blur(25px) saturate(130%);
  border: 1px solid rgba(255, 255, 255, 0.18);
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.15),
    0 4px 12px rgba(0, 0, 0, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.2),
    inset 0 -1px 0 rgba(0, 0, 0, 0.05);
  z-index: 3;
  transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) !important;
}

/* Value Image Panel with hover that overrides scroll animation final state */
.valueImagePanel:hover {
  transform: translateY(-6px) scale(1.02) !important;
  transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) !important;
}

.valueImageHoverOverlay {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border-radius: 8px;
  border: 1px solid rgba(249, 115, 22, 0.6);
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.08),
    0 4px 12px rgba(0, 0, 0, 0.04),
    0 0 15px rgba(249, 115, 22, 0.1);
  opacity: 0;
  transition: opacity 0.6s ease;
  pointer-events: none;
  z-index: 1;
}

.valueImagePanel:hover .valueImageHoverOverlay {
  opacity: 1;
}

.valueImage {
  object-fit: cover;
  object-position: center;
}

.valueImageGradient {
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, rgba(0, 0, 0, 0.15) 0%, transparent 40%, transparent 60%, rgba(0, 0, 0, 0.1) 100%);
  z-index: 1;
}

.valueImageBadge {
  position: absolute;
  top: 1.5rem;
  left: 50%;
  transform: translateX(-50%);
  padding: clamp(0.4rem, 1.5vw, 0.5rem) clamp(0.8rem, 3vw, 1.2rem);
  background: rgba(var(--accent-rgb), 0.75);
  border-radius: 50px;
  font-size: clamp(0.7rem, 2vw, 0.8rem);
  font-weight: 500;
  color: rgba(255, 255, 255, 0.95);
  letter-spacing: 0.02em;
  backdrop-filter: blur(8px);
  z-index: 2;
  text-align: center;
  white-space: nowrap;
}

/* Value Content Panel */
.valueContentPanel {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: clamp(2rem, 8vw, 4.5rem);
  border-radius: 8px;
  z-index: 2;
  position: relative;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.01) 0%, rgba(255, 255, 255, 0.06) 50%, rgba(255, 255, 255, 0.03) 100%);
  border: 1px solid rgba(128, 128, 128, 0.4);
  transition: opacity 0.6s ease, transform 0.6s ease;
}

.valueContentPanel--even {
  margin-left: -20px;
  margin-right: clamp(0%, 4vw, 0%);
}

.valueContentPanel--odd {
  margin-left: clamp(0%, 4vw, 0%);
  margin-right: -20px;
}

.valueContentPanel:hover {
  transform: translateY(0);
}

.valueContentHoverOverlay {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border-radius: 8px;
  border: 1px solid rgba(147, 51, 234, 0.6);
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.08),
    0 4px 12px rgba(0, 0, 0, 0.04),
    0 0 15px rgba(147, 51, 234, 0.1);
  opacity: 0;
  transition: opacity 0.6s ease, transform 0.6s ease;
  transform: translateY(2px);
  pointer-events: none;
}

.valueContentPanel:hover .valueContentHoverOverlay {
  opacity: 1;
  transform: translateY(0);
}

.valueHeader {
  display: flex;
  align-items: center;
  gap: 1.5rem;
  margin-bottom: 2rem;
}

.valueIconContainer {
  width: 4rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(255, 255, 255, 0.06);
  border-radius: 50%;
}

.valueIcon {
  color: var(--text-accent);
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

.valueTitle {
  font-size: clamp(1.6rem, 4vw, 2.2rem);
  font-weight: 400;
  color: var(--text-primary);
  margin-bottom: 0.5rem;
  letter-spacing: 0em;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.valueSubtitle {
  font-size: clamp(0.9rem, 2.2vw, 1rem);
  color: var(--text-muted);
  margin: 0;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  opacity: 0.7;
}

.valueDescription {
  font-size: clamp(1.1rem, 2.6vw, 1.3rem);
  line-height: 1.7;
  color: var(--text-secondary);
  margin: 0 3% 2rem;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  opacity: 0.7;
}

.valueQuote {
  padding: 1.5rem 5%;
  padding-left: 2rem;
  background: transparent;
  border-left: 3px solid rgba(var(--accent-rgb), 0.6);
  border-radius: 0 4px 4px 0;
}

.valueQuoteText {
  font-size: clamp(0.95rem, 2.2vw, 1.05rem);
  line-height: 1.6;
  color: var(--text-secondary);
  margin: 0;
  font-style: italic;
  opacity: 0.7;
}

/* ===================================
   RESPONSIVE DESIGN
   =================================== */

/* Mobile Styles */
@media (max-width: 768px) {
  .heroContent {
    flex-direction: column !important;
    gap: 3rem !important;
    text-align: center;
  }
  
  .portraitContainer {
    width: 100% !important;
    max-width: 350px !important;
    margin: 0 auto;
  }

  .achievementsGrid {
    gap: clamp(0.5rem, 3vw, 1rem) !important;
  }

  .achievementCard {
    flex: 1 1 clamp(120px, 40vw, 150px) !important;
    min-width: clamp(120px, 40vw, 150px) !important;
    max-width: none !important;
    padding: clamp(0.75rem, 4vw, 1rem) clamp(0.5rem, 3vw, 0.75rem) !important;
    min-height: clamp(90px, 12vh, 110px) !important;
  }

  .achievementCardLabel {
    font-size: clamp(0.6rem, 2.5vw, 0.7rem) !important;
    margin-bottom: 0.25rem !important;
  }

  .achievementCardValue {
    font-size: clamp(0.8rem, 3.5vw, 0.95rem) !important;
  }
  
  .textContent {
    text-align: left;
  }

  .valueContainer {
    flex-direction: column !important;
    gap: 0 !important;
    padding: 0 2% !important;
    margin-bottom: 3rem !important;
    align-items: center !important;
  }
  
  .valueImagePanel {
    margin-left: 0 !important;
    margin-right: 0 !important;
    height: 500px;
    flex: none !important;
    width: 95% !important;
    z-index: 3 !important;
    margin-bottom: -30px !important;
  }

  .valueContentPanel {
    padding: 3rem 3% !important;
    margin-top: 10px !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
    z-index: 2 !important;
    flex: none !important;
    width: 100% !important;
  }

  .valueHeader {
    flex-direction: column !important;
    align-items: center !important;
    text-align: center !important;
    gap: 1rem !important;
    margin-bottom: 1.5rem !important;
  }
  
  .actionButtons {
    flex-direction: column !important;
    gap: 1rem !important;
  }
  
  .actionButtons .actionButtonContainer,
  .actionButtons .actionButtonLink {
    width: 100% !important;
    justify-content: center !important;
  }
  
  .skillsGrid {
    grid-template-columns: 1fr !important;
    gap: 1.5rem !important;
  }
}

/* Small Mobile */
@media (max-width: 480px) {
  .achievementsGrid {
    gap: clamp(0.5rem, 3vw, 0.75rem) !important;
  }

  .achievementCard {
    flex: 1 1 clamp(130px, 45vw, 160px) !important;
    min-width: clamp(130px, 45vw, 160px) !important;
    padding: clamp(0.5rem, 4vw, 0.75rem) clamp(0.25rem, 2vw, 0.5rem) !important;
    min-height: clamp(80px, 10vh, 90px) !important;
  }

  .achievementCardLabel {
    font-size: clamp(0.55rem, 2vw, 0.65rem) !important;
    line-height: 1.1 !important;
    margin-bottom: 0.2rem !important;
  }

  .achievementCardValue {
    font-size: clamp(0.75rem, 3vw, 0.85rem) !important;
  }

  .achievementCardIcon {
    margin-bottom: 0.25rem !important;
  }

  .valueContainer {
    padding: 0 1% !important;
  }
  
  .valueContentPanel {
    padding: 3rem 2% !important;
  }
}

/* Tablet Styles */
@media (max-width: 1024px) and (min-width: 769px) {
  .skillsGrid {
    grid-template-columns: repeat(2, 1fr) !important;
    gap: 1.5rem !important;
  }
  
  .valueContainer {
    gap: 0 !important;
    padding: 0 1rem !important;
  }

  .valueImagePanel {
    flex: 0 0 clamp(300px, 40%, 400px) !important;
    height: 450px !important;
    margin-left: -10px !important;
    margin-right: -10px !important;
    z-index: 3 !important;
  }

  .valueContentPanel {
    flex: 0 0 clamp(400px, 55%, 500px) !important;
    margin-left: -10px !important;
    margin-right: -10px !important;
    padding: clamp(3rem, 4vw, 3rem) !important;
    z-index: 2 !important;
  }
}

/* Desktop Styles */
@media (min-width: 769px) {
  .skillsGrid {
    grid-template-columns: repeat(3, 1fr) !important;
  }
  
  .valueContainer {
    align-items: center !important;
  }
}

/* Accordion Content Scrollbar */
.accordionContent::-webkit-scrollbar {
  width: 8px;
}

.accordionContent::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
}

.accordionContent::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, var(--color-primary), var(--color-accent));
  border-radius: 4px;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.accordionContent::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(135deg, var(--color-accent), var(--color-primary));
}

/* Page Loading Styles */
.pageContainerLoading {
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}

.pageContainerVisible {
  opacity: 1;
  transition: opacity 0.5s ease-in-out;
}

/* Portrait Image Loading States */
.portraitImageLoading {
  opacity: 0;
}

.portraitImageLoaded {
  opacity: 1;
}

/* Achievement Card Animation Delays */
.achievementCard:nth-child(1) {
  animation: fadeInUp 0.6s ease-out 0.6s both;
}

.achievementCard:nth-child(2) {
  animation: fadeInUp 0.6s ease-out 0.7s both;
}

.achievementCard:nth-child(3) {
  animation: fadeInUp 0.6s ease-out 0.8s both;
}

.achievementCard:nth-child(4) {
  animation: fadeInUp 0.6s ease-out 0.9s both;
}

/* Interactive Layer for Achievement Cards */
.achievementInteractiveLayer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 20;
}

/* Skill Progress Bar Container */
.skillProgressBarContainer {
  position: relative;
  height: 8px;
  background: linear-gradient(90deg, rgba(0, 0, 0, 0.15) 0%, rgba(0, 0, 0, 0.1) 100%),
              linear-gradient(90deg, rgba(255, 255, 255, 0.05) 0%, rgba(255, 255, 255, 0.02) 100%);
  border-radius: 6px;
  overflow: hidden;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15),
              inset 0 1px 2px rgba(0, 0, 0, 0.1),
              0 1px 0 rgba(255, 255, 255, 0.1);
  z-index: 1;
  border: 1px solid rgba(0, 0, 0, 0.1);
}

/* Skill Level Display */
.skillLevelDisplay {
  text-align: right;
  margin-top: 0.75rem;
  font-size: 0.9rem;
  color: var(--text-accent);
  font-weight: 650;
  letter-spacing: -0.01em;
  position: relative;
  z-index: 1;
}

/* Values Layout */
.valueContainer {
  display: flex;
  align-items: center;
  position: relative;
  min-height: 500px;
  margin-bottom: clamp(2rem, 4vh, 3rem);
}

.valueContainerEven {
  flex-direction: row;
}

.valueContainerOdd {
  flex-direction: row-reverse;
}

/* Value Image Panel */
.valueImagePanel {
  flex: 0 0 clamp(320px, 38%, 450px);
  height: 500px;
  position: relative;
  border-radius: 8px;
  overflow: hidden;
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.12) 0%,
    rgba(255, 255, 255, 0.08) 50%,
    rgba(255, 255, 255, 0.04) 100%
  );
  backdrop-filter: blur(25px) saturate(130%);
  border: 1px solid rgba(255, 255, 255, 0.18);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15),
              0 4px 12px rgba(0, 0, 0, 0.1),
              inset 0 1px 0 rgba(255, 255, 255, 0.2),
              inset 0 -1px 0 rgba(0, 0, 0, 0.05);
  z-index: 3;
}

/* Value Image Hover Overlay */
.valueImageHoverOverlay {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border-radius: 8px;
  border: 1px solid rgba(249, 115, 22, 0.6);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08),
              0 4px 12px rgba(0, 0, 0, 0.04),
              0 0 15px rgba(249, 115, 22, 0.1);
  opacity: 0;
  transition: opacity 0.6s ease;
  pointer-events: none;
  z-index: 1;
}

/* Value Image Interactive Layer */
.valueImageInteractiveLayer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 20;
}

/* Personal Story Section Animations */
.personalStorySection:nth-child(1) {
  animation: fadeInUp 0.6s ease-out 0.5s both;
}

.personalStorySection:nth-child(2) {
  animation: fadeInUp 0.6s ease-out 0.7s both;
}

.personalStorySection:nth-child(3) {
  animation: fadeInUp 0.6s ease-out 0.9s both;
}

/* Skill Card Staggered Animations */
.skillCard:nth-child(1) {
  animation: fadeInUp 0.6s ease-out 0s both;
}

.skillCard:nth-child(2) {
  animation: fadeInUp 0.6s ease-out 0.1s both;
}

.skillCard:nth-child(3) {
  animation: fadeInUp 0.6s ease-out 0.2s both;
}

.skillCard:nth-child(4) {
  animation: fadeInUp 0.6s ease-out 0.3s both;
}

.skillCard:nth-child(5) {
  animation: fadeInUp 0.6s ease-out 0.4s both;
}

.skillCard:nth-child(6) {
  animation: fadeInUp 0.6s ease-out 0.5s both;
}

.skillCard:nth-child(7) {
  animation: fadeInUp 0.6s ease-out 0.6s both;
}

.skillCard:nth-child(8) {
  animation: fadeInUp 0.6s ease-out 0.7s both;
}

/* Skill Category */
.skillCategory {
  font-size: 0.8rem;
  color: var(--text-muted);
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  opacity: 0.8;
}

/* Value Image Overlay */
.valueImageOverlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, 
    rgba(0, 0, 0, 0.15) 0%,
    transparent 40%,
    transparent 60%,
    rgba(0, 0, 0, 0.1) 100%
  );
  z-index: 1;
}

/* Value Image Badge */
.valueImageBadge {
  position: absolute;
  top: 1.5rem;
  left: 50%;
  transform: translateX(-50%);
  padding: clamp(0.4rem, 1.5vw, 0.5rem) clamp(0.8rem, 3vw, 1.2rem);
  background: rgba(var(--accent-rgb), 0.75);
  border-radius: 50px;
  font-size: clamp(0.7rem, 2vw, 0.8rem);
  font-weight: 500;
  color: rgba(255, 255, 255, 0.95);
  letter-spacing: 0.02em;
  backdrop-filter: blur(8px);
  z-index: 2;
  text-align: center;
  white-space: nowrap;
}

/* Value Content Panel */
.valueContentPanel {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: clamp(2rem, 8vw, 4.5rem);
  border-radius: 8px;
  z-index: 2;
  position: relative;
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.01) 0%,
    rgba(255, 255, 255, 0.06) 50%,
    rgba(255, 255, 255, 0.03) 100%
  );
  border: 1px solid rgba(128, 128, 128, 0.4);
}

.valueContentPanelEven {
  margin-left: -20px;
  margin-right: clamp(0%, 4vw, 0%);
}

.valueContentPanelOdd {
  margin-left: clamp(0%, 4vw, 0%);
  margin-right: -20px;
}
/* Values List Container */
.valuesListContainer {
  display: flex;
  flex-direction: column;
  gap: clamp(3rem, 6vh, 5rem);
}
/* Value Content Hover Overlay */
.valueContentHoverOverlay {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border-radius: 8px;
  border: 1px solid rgba(147, 51, 234, 0.6);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08),
              0 4px 12px rgba(0, 0, 0, 0.04),
              0 0 15px rgba(147, 51, 234, 0.1);
  opacity: 0;
  transition: opacity 0.6s ease, transform 0.6s ease;
  transform: translateY(2px);
  pointer-events: none;
}
/* Value Header */
.valueHeader {
  display: flex;
  align-items: center;
  gap: 1.5rem;
  margin-bottom: 2rem;
}
/* Value Icon */
.valueIcon {
  color: var(--text-accent);
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

/* Value Title */
.valueTitle {
  font-size: clamp(1.6rem, 4vw, 2.2rem);
  font-weight: 400;
  color: var(--text-primary);
  margin-bottom: 0.5rem;
  letter-spacing: 0em;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

/* Value Description */
.valueDescription {
  font-size: clamp(0.9rem, 2.2vw, 1rem);
  color: var(--text-secondary);
  line-height: 1.75;
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);
}
/* Value Subtitle */
.valueSubtitle {
  font-size: clamp(0.9rem, 2.2vw, 1rem);
  color: var(--text-muted);
  margin: 0;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  opacity: 0.7;
}

/* Update Value Description */
.valueDescriptionUpdated {
  font-size: clamp(1.1rem, 2.6vw, 1.3rem);
  line-height: 1.7;
  color: var(--text-secondary);
  margin: 0 3% 2rem;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  opacity: 0.7;
}
/* Value Icon Container */
.valueIconContainer {
  width: 4rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(255, 255, 255, 0.06);
  border-radius: 50%;
}

/* Value Quote Box */
.valueQuoteBox {
  padding: 1.5rem 5%;
  padding-left: 2rem;
  background: transparent;
  border-left: 3px solid rgba(var(--accent-rgb), 0.6);
  border-radius: 0 4px 4px 0;
}

/* Value Quote Text */
.valueQuoteText {
  font-size: clamp(0.95rem, 2.2vw, 1.05rem);
  line-height: 1.6;
  color: var(--text-secondary);
  margin: 0;
  font-style: italic;
  opacity: 0.7;
}

/* Responsive Design - Mobile */
@media (max-width: 768px) {
  .aboutHeroGrid {
    flex-direction: column !important;
    gap: 3rem !important;
    text-align: center;
  }
  
  .portraitColumn {
    width: 100% !important;
    max-width: 350px !important;
    margin: 0 auto;
  }
  
  .contentColumn {
    text-align: left;
  }

  .valueContainer {
    flex-direction: column !important;
    gap: 0 !important;
    padding: 0 2% !important;
    margin-bottom: 3rem !important;
    align-items: center !important;
  }
  
  .imagePanel,
  .contentPanel {
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
  
  .imagePanel {
    height: 500px;
    flex: none !important;
    width: 95% !important;
    z-index: 3 !important;
    margin-bottom: -30px !important;
  }

  .contentPanel {
    padding: 3rem 3% !important;
    margin-top: 10px !important;
    z-index: 2 !important;
    flex: none !important;
    width: 100% !important;
  }

  /* Stack icon and content vertically on mobile */
  .valueHeader {
    flex-direction: column !important;
    align-items: center !important;
    text-align: center !important;
    gap: 1rem !important;
    margin-bottom: 1.5rem !important;
  }
}

/* Extra small mobile adjustments */
@media (max-width: 480px) {
  .valueContainer {
    padding: 0 1% !important;
  }
  
  .contentPanel {
    padding: 3rem 2% !important;
  }
}

/* Tablet adjustments */
@media (max-width: 1024px) and (min-width: 769px) {
  .valueContainer {
    gap: 0 !important;
    padding: 0 1rem !important;
  }

  .imagePanel {
    flex: 0 0 clamp(300px, 40%, 400px) !important;
    height: 450px !important;
    margin-left: -10px !important;
    margin-right: -10px !important;
    z-index: 3 !important;
  }

  .contentPanel {
    flex: 0 0 clamp(400px, 55%, 500px) !important;
    margin-left: -10px !important;
    margin-right: -10px !important;
    padding: clamp(3rem, 4vw, 3rem) !important;
    z-index: 2 !important;
  }
}

/* ====================
   ADDITIONAL KEYFRAMES FROM JSX STYLES
   ==================== */

/* ====================
   PORTRAIT IMAGE LOADING
   ==================== */

.portraitImage {
  transition: opacity 0.6s ease-in-out;
}

/* ====================
   ADDITIONAL RESPONSIVE STYLES FROM JSX
   ==================== */

/* Mobile Responsive adjustments */
@media (max-width: 768px) {
  .aboutHeroGrid {
    flex-direction: column !important;
    gap: 3rem !important;
    text-align: center;
  }
  
  .portraitColumn {
    width: 100% !important;
    max-width: 350px !important;
    margin: 0 auto;
  }
  
  .contentColumn {
    text-align: left;
  }

  .valueContainer {
    flex-direction: column !important;
    gap: 0 !important;
    padding: 0 2% !important;
    margin-bottom: 3rem !important;
    align-items: center !important;
  }
  
  .imagePanel,
  .contentPanel {
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
  
  .imagePanel {
    height: 500px;
    flex: none !important;
    width: 95% !important;
    z-index: 3 !important;
    margin-bottom: -30px !important;
  }

  .contentPanel {
    padding: 3rem 3% !important;
    margin-top: 10px !important;
    z-index: 2 !important;
    flex: none !important;
    width: 100% !important;
  }

  /* Stack icon and content vertically on mobile */
  .valueHeader {
    flex-direction: column !important;
    align-items: center !important;
    text-align: center !important;
    gap: 1rem !important;
    margin-bottom: 1.5rem !important;
  }
}

/* Extra small mobile adjustments */
@media (max-width: 480px) {
  .valueContainer {
    padding: 0 1% !important;
  }
  
  .contentPanel {
    padding: 3rem 2% !important;
  }
}

/* ====================
   ENHANCED CSS FOR PRODUCTION GLASSMORPHISM
   ==================== */

.glassHighlight {
  position: relative;
  overflow: hidden;
}

.glassHighlight::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: left 0.7s ease;
  pointer-events: none;
}

.glassHighlight:hover::before {
  left: 100%;
}

/* Accordion Content Scrollbar Styling */
.accordionContent::-webkit-scrollbar {
  width: 8px;
}

.accordionContent::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
}

.accordionContent::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, var(--color-primary), var(--color-accent));
  border-radius: 4px;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.accordionContent::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(135deg, var(--color-accent), var(--color-primary));
}

/* Mobile Responsive Styles */
@media (max-width: 480px) {
  .actionButtonsContainer {
    flex-direction: column !important;
    gap: 1rem !important;
  }
  
  .actionButtonsContainer a {
    width: 100% !important;
    justify-content: center !important;
  }
  
  .skillsGrid {
    grid-template-columns: 1fr !important;
    gap: 1.5rem !important;
  }
  
  .valueRow {
    flex-direction: column !important;
    gap: 2rem !important;
  }
  
  .imageColumn {
    flex: 1 1 auto !important;
    width: 100% !important;
    max-width: 400px !important;
    margin: 0 auto;
  }
  
  .contentColumn {
    flex: 1 1 auto !important;
    width: 100% !important;
  }
}

/* Tablet Responsive Styles */
@media (max-width: 768px) and (min-width: 481px) {
  .skillsGrid {
    grid-template-columns: repeat(2, 1fr) !important;
    gap: 1.5rem !important;
  }
  
  .valueRow {
    flex-direction: column !important;
    gap: 2.5rem !important;
  }
  
  .imageColumn {
    flex: 1 1 auto !important;
    width: 100% !important;
    max-width: 500px !important;
    margin: 0 auto;
  }
  
  .contentColumn {
    flex: 1 1 auto !important;
    width: 100% !important;
  }
}

/* Desktop Styles */
@media (min-width: 769px) {
  .skillsGrid {
    grid-template-columns: repeat(3, 1fr) !important;
  }
  
  .valueRow {
    align-items: center !important;
  }
}
